{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_react\\\\todo\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\nimport TodoList from \"../TodoList/TodoList\";\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Drink coffee'), this.createTodoItem('Make awesome App'), this.createTodoItem('Learn React')]\n    };\n\n    this.deleteItem = id => {\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const idx = todoData.findIndex(el => el.id === id); // const before = todoData.slice(0, idx);\n        // const after = todoData.slice(idx + 1);\n\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      //generate id\n      const newItem = this.createTodoItem(text);\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      console.log('Toggle important', id);\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = { ...oldItem,\n          done: !oldItem.done\n        };\n        const newArray = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      id: this.maxId++,\n      label: label,\n      important: false,\n      done: false\n    };\n  }\n\n  render() {\n    const {\n      todoData\n    } = this.state;\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        toDo: doneCount,\n        done: todoCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ItemStatusFilter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todoData,\n        onDeleted: this.deleteItem,\n        onToggleImportant: this.onToggleImportant,\n        onToggleDone: this.onToggleDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ItemAddForm, {\n        onItemAdded: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/project_react/todo/src/components/App/App.js"],"names":["React","AppHeader","SearchPanel","TodoList","ItemStatusFilter","ItemAddForm","App","Component","maxId","state","todoData","createTodoItem","deleteItem","id","setState","idx","findIndex","el","newArray","slice","addItem","text","newItem","newArr","onToggleImportant","console","log","onToggleDone","oldItem","done","label","important","render","doneCount","filter","length","todoCount"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport \"./App.css\"\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport TodoList from \"../TodoList/TodoList\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\r\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink coffee'),\r\n            this.createTodoItem('Make awesome App'),\r\n            this.createTodoItem('Learn React'),\r\n        ]\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            id: this.maxId++,\r\n            label: label,\r\n            important: false,\r\n            done: false\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData})=>{\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            // const before = todoData.slice(0, idx);\r\n            // const after = todoData.slice(idx + 1);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)]\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        //generate id\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [ ...todoData, newItem ];\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        console.log('Toggle important', id)\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const oldItem = todoData[idx];\r\n            const newItem = {\r\n                ...oldItem,\r\n                done: !oldItem.done\r\n            }\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                newItem,\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n            return {\r\n                todoData: newArray\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData } = this.state\r\n\r\n        const doneCount = todoData\r\n                            .filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className='todo-app'>\r\n                <AppHeader toDo={doneCount} done={todoCount}/>\r\n                <div className='top-panel d-flex'>\r\n                    <SearchPanel/>\r\n                    <ItemStatusFilter/>\r\n                </div>\r\n\r\n                <TodoList todos={todoData}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}