{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_react\\\\todo\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\nimport TodoList from \"../TodoList/TodoList\";\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [],\n      itemSearch: ''\n    };\n\n    this.deleteItem = id => {\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const idx = todoData.findIndex(el => el.id === id); // const before = todoData.slice(0, idx);\n        // const after = todoData.slice(idx + 1);\n\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      //generate id\n      const newItem = this.createTodoItem(text);\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref4 => {\n        let {\n          todoData\n        } = _ref4;\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.search = (items, itemSearch) => {\n      if (itemSearch.length === 0) {\n        return items;\n      }\n\n      return items.filter(e => {\n        return e.label.indexOf(itemSearch) > -1;\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      id: this.maxId++,\n      label: label,\n      important: false,\n      done: false\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  render() {\n    const {\n      todoData,\n      itemSearch\n    } = this.state;\n    const searchingItems = this.search(todoData, itemSearch);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        toDo: todoCount,\n        done: doneCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ItemStatusFilter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: searchingItems,\n        onDeleted: this.deleteItem,\n        onToggleImportant: this.onToggleImportant,\n        onToggleDone: this.onToggleDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ItemAddForm, {\n        onItemAdded: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/project_react/todo/src/components/App/App.js"],"names":["React","AppHeader","SearchPanel","TodoList","ItemStatusFilter","ItemAddForm","App","Component","maxId","state","todoData","itemSearch","deleteItem","id","setState","idx","findIndex","el","newArray","slice","addItem","text","newItem","createTodoItem","newArr","onToggleImportant","toggleProperty","onToggleDone","search","items","length","filter","e","label","indexOf","important","done","arr","propName","oldItem","render","searchingItems","doneCount","todoCount"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport \"./App.css\"\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport TodoList from \"../TodoList/TodoList\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\r\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [ ],\r\n        itemSearch: ''\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            id: this.maxId++,\r\n            label: label,\r\n            important: false,\r\n            done: false\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData})=>{\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            // const before = todoData.slice(0, idx);\r\n            // const after = todoData.slice(idx + 1);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)]\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        //generate id\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [ ...todoData, newItem ];\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n            const idx = arr.findIndex((el) => el.id === id);\r\n            const oldItem = arr[idx];\r\n            const newItem = {\r\n                ...oldItem,\r\n                [propName]: !oldItem[propName]\r\n            }\r\n\r\n        return [\r\n                ...arr.slice(0, idx),\r\n                newItem,\r\n                ...arr.slice(idx + 1)\r\n            ];\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return{\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return{\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n\r\n    search = (items, itemSearch) => {\r\n        if (itemSearch.length === 0){\r\n            return items\r\n        }\r\n        \r\n        return items.filter((e) => {\r\n            return e.label.indexOf(itemSearch) > -1;\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, itemSearch } = this.state\r\n\r\n        const searchingItems = this.search(todoData, itemSearch)\r\n\r\n        const doneCount = todoData\r\n                            .filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className='todo-app'>\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className='top-panel d-flex'>\r\n                    <SearchPanel/>\r\n                    <ItemStatusFilter/>\r\n                </div>\r\n\r\n                <TodoList todos={searchingItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}